# nginx.conf - Configuration for serving the React-based web frontend
# Supports both Pike (merchant) and Barracuda (admin) interfaces

worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    server_tokens off;

    # Gzip compression settings for improved performance
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/xml
        font/opentype
        image/svg+xml
        text/css
        text/plain
        text/xml;

    # Get the backend API URL from environment variable if set, otherwise use default
    map $host $api_backend {
        default "http://refund-api:8080";
    }

    # Main server block - handles both Pike and Barracuda interfaces
    server {
        listen 80 default_server;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' https://*.brik.com; object-src 'none';" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;

        # API forwarding
        location /api/ {
            proxy_pass $api_backend/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
            
            # Handle CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Pike (merchant interface) specific paths
        location /merchant {
            try_files $uri $uri/ /index.html;
        }

        # Barracuda (admin interface) specific paths
        location /admin {
            try_files $uri $uri/ /index.html;
        }

        # Static assets with appropriate caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
            try_files $uri =404;
        }

        # Font files
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, immutable";
            try_files $uri =404;
        }

        # HTML files - shorter cache time
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600, must-revalidate";
            try_files $uri =404;
        }

        # Service worker - no caching
        location ~* (service-worker\.js)$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
            try_files $uri =404;
        }

        # Health check for load balancers
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'OK';
        }

        # Default SPA routing - catch all other routes
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Error handling
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}